package com.ss.schedulesys.domain;
// Generated Feb 11, 2017 7:27:59 PM by Hibernate Tools 5.0.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;

/**
 * ScheduleSysUser generated by hbm2java
 */
@Data
@Entity
@Builder
@NoArgsConstructor
@AllArgsConstructor
@ToString(exclude = {"schedules", "scheduleUpdates"})
@EqualsAndHashCode(exclude = {"schedules", "scheduleUpdates"})
@Table(name = "schedule_sys_user", catalog = "schedulesys_db", uniqueConstraints = {
		@UniqueConstraint(columnNames = "email_address"), @UniqueConstraint(columnNames = "username") })
public class ScheduleSysUser implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1194882658721457752L;
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "role_id", nullable = false, foreignKey = @ForeignKey(name = "fk_schedulesysuser_role"))
	private UserRole userRole;
	
	
	@Column(name = "email_address", unique = true, nullable = false, length = 100)
	private String emailAddress;
	
	@Column(name = "username", unique = true, nullable = false, length = 100)
	private String username;
	
	@JsonIgnore
	@Column(name = "password", nullable = false, length = 200)
	private String password;
	
	@Column(name = "is_activated", nullable = false)
	private boolean isActivated;
	
	@JsonIgnore
	@Column(name = "activation_token", length = 200)
	private String activationToken;
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scheduleSysUser")
	private Set<Schedule> schedules = new HashSet<Schedule>(0);
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scheduleSysUser")
	private Set<ScheduleUpdate> scheduleUpdates = new HashSet<ScheduleUpdate>(0);

}