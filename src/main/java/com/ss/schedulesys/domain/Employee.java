package com.ss.schedulesys.domain;
// Generated Feb 11, 2017 7:27:59 PM by Hibernate Tools 5.0.0.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Size;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;

/**
 * Employee generated by hbm2java
 */
@Data
@Entity
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "employee", catalog = "schedulesys_db")
@ToString(exclude = {"schedules", "testOccurrences", "phoneNumbers", "licenses"})
@EqualsAndHashCode(exclude = {"schedules", "testOccurrences", "phoneNumbers", "licenses"})
public class Employee implements java.io.Serializable {

	private static final long serialVersionUID = -4901691910503299165L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "type_id", nullable = false, foreignKey = @ForeignKey(name = "fk_employee_type"))
	private EmployeeType employeeType;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "position_id", nullable = false, foreignKey = @ForeignKey(name = "fk_employee_position"))
	private Position position;
	
	@Size(min = 2, max = 50)
	@Column(name = "first_name", nullable = false, length = 50)
	private String firstName;
	
	@Size(min = 2, max = 50)
	@Column(name = "last_name", nullable = false, length = 50)
	private String lastName;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_hire", length = 10)
	private Date dateOfHire;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "last_day_of_work", length = 10)
	private Date lastDayOfWork;
	
	@Size(max = 500)
	@Column(name = "comment")
	private String comment;
	
	@Column(name = "ebc", nullable = false)
	private boolean ebc;
	
	@Column(name = "insvc", nullable = false)
	private boolean insvc;
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	private Set<Schedule> schedules = new HashSet<Schedule>(0);
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	private Set<License> licenses = new HashSet<License>(0);
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	private Set<TestOccurrence> testOccurrences = new HashSet<TestOccurrence>(0);
	
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	private Set<PhoneNumber> phoneNumbers = new HashSet<PhoneNumber>(0);

}